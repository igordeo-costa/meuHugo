<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PCIbex on Igor Costa</title>
    <link>https://igordeo-costa.github.io/tags/pcibex/</link>
    <description>Recent content in PCIbex on Igor Costa</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 02 May 2021 19:05:10 -0300</lastBuildDate>
    
	<atom:link href="https://igordeo-costa.github.io/tags/pcibex/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Começando do zero no PcIbex - Parte 02</title>
      <link>https://igordeo-costa.github.io/posts/pcibextutorial02/</link>
      <pubDate>Sun, 02 May 2021 19:05:10 -0300</pubDate>
      
      <guid>https://igordeo-costa.github.io/posts/pcibextutorial02/</guid>
      <description>Na parte 1 do nosso tutorial, que você pode acessar aqui, mostramos como começar do zero no PCIbex, criando uma página de instruções com um botão clicável e como inserir um único item experimental para um experimento de leitura automonitorada. O problema é que nunca temos um único item experimental, mas vários itens, de vários tipos diferentes. Nessa parte 2, então, vamos mostrar como usar a mesma estrutura básica que já aprendemos para, em vez de inserirmos item a item no código, buscarmos cada um dos itens em uma tabela.</description>
    </item>
    
    <item>
      <title>Começando do zero no PCIbex - Parte 01</title>
      <link>https://igordeo-costa.github.io/posts/pcibextutorial01/</link>
      <pubDate>Sun, 02 May 2021 18:33:34 -0300</pubDate>
      
      <guid>https://igordeo-costa.github.io/posts/pcibextutorial01/</guid>
      <description>Este tutorial foi organizado por Igor Costa, com ajuda de Ana Paula Jakubów. Montamos o tutorial com base na nossa experiência com o PCIbex - PennController for Internet Based Experiments. Nesse sentido, criamos um passo-a-passo para aqueles que nunca viram nada de programação, javascript, ccs, html, etc. antes. Esperamos que ajude no seu experimento. Não somos expert no assunto, mas pretendemos ajudar, de alguma forma, os linguistas brasileiros que trabalham com metodologia experimental.</description>
    </item>
    
    <item>
      <title>Acessando dados do Ibex e PCIbex com o R</title>
      <link>https://igordeo-costa.github.io/posts/dadosibex/</link>
      <pubDate>Thu, 08 Apr 2021 19:37:46 -0300</pubDate>
      
      <guid>https://igordeo-costa.github.io/posts/dadosibex/</guid>
      <description>O objetivo deste artigo é mostrar como você pode acessar facilmente os resultados do seu experimento do Ibex Farm ou do PCIbex usando o R, sobretudo com as funcionalidades do pacote stringr para separar em múltiplas colunas as variáveis que compõem as condições experimentais, geralmente disponíveis em uma única coluna.
Acessando os dados do Ibex Farm Eu já falei um pouquinho aqui sobre acesso aos dados do Ibex Farm. Como disse por lá, a melhor forma, a meu ver, é usar o pacote ibextor, que tem uma função para cada tipo de controlador disponível, ou seja, uma para extrair dados de leitura automonitorada (get_results_ds), sendo o ds uma abreviação de &amp;ldquo;DashedSentence&amp;rdquo;; uma para extrair os dados de julgamento de aceitabilidade (get_results_aj), sendo o aj de &amp;ldquo;AcceptabilityJudgment&amp;rdquo;; uma para extrair os dados de questionários (get_results_q), sendo o q, obviamente, de &amp;ldquo;Question&amp;rdquo;; e uma para extrair os dados de julgamento de aceitabilidade em que o falante moninota a leitura da sentença (get_results_daj), sendo o daj de &amp;ldquo;DashedAcceptabilityJudgment&amp;rdquo; feito com sentença.</description>
    </item>
    
  </channel>
</rss>